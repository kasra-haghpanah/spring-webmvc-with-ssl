<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>4.0.0-M2</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>org.application</groupId>
    <artifactId>spring</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>spring</name>
    <description>spring</description>
    <url/>
    <licenses>
        <license/>
    </licenses>
    <developers>
        <developer/>
    </developers>
    <scm>
        <connection/>
        <developerConnection/>
        <tag/>
        <url/>
    </scm>
    <properties>
        <java.version>24</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <logstash-logback.version>8.1</logstash-logback.version>
        <openapi.version>2.8.9</openapi.version>
        <jjwt.version>0.11.5</jjwt.version>
        <mariadb.version>3.5.5</mariadb.version>
        <ulid.version>8.3.0</ulid.version>
        <jsoup.version>1.21.1</jsoup.version>
        <bucket4j.version>8.0.1</bucket4j.version>
    </properties>
    <dependencies>

        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash-logback.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- webmvc -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- webmvc -->

        <!-- https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui -->
        <!-- Swagger -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${openapi.version}</version>
        </dependency>
        <!-- Swagger -->

        <!-- Spring Security -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <!-- XSS -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${jsoup.version}</version>
        </dependency>

        <!--Limit Rating-->
        <dependency>
            <groupId>com.github.vladimir-bukhtoyarov</groupId>
            <artifactId>bucket4j-core</artifactId>
            <version>${bucket4j.version}</version>
        </dependency>

        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>${jjwt.version}</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>${jjwt.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>${jjwt.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Spring Security -->

        <!-- View Resolver -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!-- View Resolver -->


        <!-- Spring Boot Starter Data JPA -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- Spring Boot Starter Data JPA -->

        <!-- JDBC Driver (مثلاً برای Mariadb) -->
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <version>${mariadb.version}</version>
        </dependency>
        <!-- JDBC Driver (مثلاً برای Mariadb) -->


        <!-- to make ulid generator -->
        <dependency>
            <groupId>de.huxhorn.sulky</groupId>
            <artifactId>de.huxhorn.sulky.ulid</artifactId>
            <version>${ulid.version}</version>
        </dependency>
        <!-- to make ulid generator -->

        <!-- Spring Boot Starter JDBC (برای DataSource) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <!-- Spring Boot Starter JDBC (برای DataSource) -->

        <!-- Spring Boot Starter Transaction (اختیاری، در starter هست) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>
        <!-- Spring Boot Starter Transaction (اختیاری، در starter هست) -->

        <dependency>
            <groupId>org.springframework.retry</groupId>
            <artifactId>spring-retry</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>


        <!-- Monitoring & Alerting -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <!-- Monitoring & Alerting -->


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
<!--                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>-->
                <excludes>
                    <exclude>static/help/**</exclude>
                </excludes>
                <filtering>false</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <!-- java -Dserver.port=8442 -jar spring.jar  -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>org.application.spring.Application</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <id>build-info</id>
                        <goals>
                            <!-- for read maven property by BuildProperties  -->
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>


            <!-- read maven property by application.properties -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                </configuration>
            </plugin>


        </plugins>

        <finalName>${artifactId}</finalName>

    </build>


    <repositories>
        <repository>
            <id>maven-central</id>
            <url>https://mvnrepository.com/artifact/</url>
        </repository>
    </repositories>

    <profiles>

        <profile>
            <id>casual</id>
            <activation> <!-- for create war package -->
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>develop</name>
                    <value>release</value>
                </property>
            </activation>

        </profile>

        <profile> <!--  mvn clean install -Pmake-certificate -->
            <id>make-certificate</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>build</name>
                    <value>release</value>
                </property>
            </activation>

            <build>
                <plugins>

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.5.1</version>
                        <executions>

                            <execution>
                                <id>generate-server-keystore</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>keytool</executable>
                                    <arguments>
                                        <argument>-genkeypair</argument>
                                        <argument>-alias</argument>
                                        <argument>serverAlias</argument>
                                        <argument>-keyalg</argument>
                                        <argument>RSA</argument>
                                        <argument>-keysize</argument>
                                        <argument>2048</argument>
                                        <argument>-keystore</argument>
                                        <argument>${project.basedir}/src/main/resources/p12/server.p12</argument>
                                        <argument>-storetype</argument>
                                        <argument>PKCS12</argument>
                                        <argument>-storepass</argument>
                                        <argument>server123</argument>
                                        <argument>-keypass</argument>
                                        <argument>server123</argument>
                                        <argument>-validity</argument>
                                        <argument>3650</argument>
                                        <argument>-dname</argument>
                                        <argument>CN=localhost, OU=Backend, O=Kasra Inc, L=Tehran, ST=Tehran, C=IR
                                        </argument>
                                    </arguments>
                                </configuration>
                            </execution>

                            <execution>
                                <id>export-server-cert</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>keytool</executable>
                                    <arguments>
                                        <argument>-export</argument>
                                        <argument>-alias</argument>
                                        <argument>serverAlias</argument>
                                        <argument>-keystore</argument>
                                        <argument>${project.basedir}/src/main/resources/p12/server.p12</argument>
                                        <argument>-storetype</argument>
                                        <argument>PKCS12</argument>
                                        <argument>-storepass</argument>
                                        <argument>server123</argument>
                                        <argument>-file</argument>
                                        <argument>${project.basedir}/src/main/resources/p12/server.cer</argument>
                                    </arguments>
                                </configuration>
                            </execution>

                            <!-- 1. ساخت keystore کلاینت -->
                            <execution>
                                <id>generate-client-keystore</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>keytool</executable>
                                    <arguments>
                                        <argument>-genkeypair</argument>
                                        <argument>-alias</argument>
                                        <argument>clientAlias</argument>
                                        <argument>-keyalg</argument>
                                        <argument>RSA</argument>
                                        <argument>-keysize</argument>
                                        <argument>2048</argument>
                                        <argument>-keystore</argument>
                                        <argument>${project.basedir}/src/main/resources/p12/client.p12</argument>
                                        <argument>-storetype</argument>
                                        <argument>PKCS12</argument>
                                        <argument>-storepass</argument>
                                        <argument>client123</argument>
                                        <argument>-keypass</argument>
                                        <argument>client123</argument>
                                        <argument>-validity</argument>
                                        <argument>3650</argument>
                                        <argument>-dname</argument>
                                        <argument>CN=client, OU=Backend, O=Kasra Inc, L=Tehran, ST=Tehran, C=IR
                                        </argument>
                                    </arguments>
                                </configuration>
                            </execution>

                            <!-- 2. استخراج گواهی عمومی کلاینت -->
                            <execution>
                                <id>export-client-cert</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>keytool</executable>
                                    <arguments>
                                        <argument>-export</argument>
                                        <argument>-alias</argument>
                                        <argument>clientAlias</argument>
                                        <argument>-keystore</argument>
                                        <argument>${project.basedir}/src/main/resources/p12/client.p12</argument>
                                        <argument>-storetype</argument>
                                        <argument>PKCS12</argument>
                                        <argument>-storepass</argument>
                                        <argument>client123</argument>
                                        <argument>-file</argument>
                                        <argument>${project.basedir}/src/main/resources/p12/client.cer</argument>
                                    </arguments>
                                </configuration>
                            </execution>

                            <!-- 3. ساخت truststore کلاینت برای اعتماد به سرور -->
                            <execution>
                                <id>create-client-truststore</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>keytool</executable>
                                    <arguments>
                                        <argument>-import</argument>
                                        <argument>-alias</argument>
                                        <argument>serverAlias</argument>
                                        <argument>-file</argument>
                                        <argument>${project.basedir}/src/main/resources/p12/server.cer</argument>
                                        <argument>-keystore</argument>
                                        <argument>${project.basedir}/src/main/resources/p12/client-truststore.p12
                                        </argument>
                                        <argument>-storetype</argument>
                                        <argument>PKCS12</argument>
                                        <argument>-storepass</argument>
                                        <argument>trust123</argument>
                                        <argument>-noprompt</argument>
                                    </arguments>
                                </configuration>
                            </execution>

                        </executions>
                    </plugin>

                </plugins>
            </build>

        </profile>


    </profiles>

</project>
